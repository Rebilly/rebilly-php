name: "Check SDK"

on:
  pull_request:

jobs:
  psalm:
    name: "Psalm"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.0', '8.1', '8.2']

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: "Install PHP w/ Extensions"
        uses: rebilly/setup-php@main
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, curl, json
          tools: composer:v2

      - name: "Get composer cache directory"
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: "Install dependencies"
        run: composer install --no-interaction --no-scripts --no-suggest

      - name: "Run tests"
        run: vendor/bin/psalm

  cs:
    name: "Coding Standards"
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        php-version: ['8.0', '8.1', '8.2']

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: "Install PHP w/ Extensions"
        uses: rebilly/setup-php@main
        with:
          php-version: ${{ matrix.php-version }}
          extensions: mbstring, intl, curl, json
          tools: composer:v2

      - name: "Get composer cache directory"
        id: composer-cache
        run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: "Install dependencies"
        run: composer install --no-interaction --no-scripts --no-suggest

      - uses: actions/cache@v3
        with:
          path: .php-cs-fixer.cache
          key: ${{ runner.os }}-cs-fixer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-cs-fixer-

      - name: "Run tests"
        run: vendor/bin/php-cs-fixer fix -vv --dry-run

  changesets:
    name: "Changesets"
    runs-on: ubuntu-latest

    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js 20
        if: ${{ ! startsWith(github.head_ref, 'changeset-release/') }}
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: 'npm'

      - name: Install Dependencies
        if: ${{ ! startsWith(github.head_ref, 'changeset-release/') }}
        run: npm ci

      - name: Check Changesets
        if: ${{ ! startsWith(github.head_ref, 'changeset-release/') }}
        run: npx changeset status --since origin/main
